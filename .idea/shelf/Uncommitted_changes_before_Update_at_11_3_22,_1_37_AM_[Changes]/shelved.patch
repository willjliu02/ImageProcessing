Index: src/model/BrightenImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/BrightenImage.java b/src/model/BrightenImage.java
new file mode 100644
--- /dev/null	(date 1667453818468)
+++ b/src/model/BrightenImage.java	(date 1667453818468)
@@ -0,0 +1,17 @@
+package model;
+
+import imageInfo.IImage;
+
+public class BrightenImage implements ImageCommand {
+
+  private int brightScale;
+
+  public BrightenImage(int brightScale) {
+
+  }
+
+  @Override
+  public IImage apply(IImage image) {
+    return null;
+  }
+}
Index: src/model/IImageProcessor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\nimport imageInfo.IPixel;\n\n/**\n * Represents an ImageProcessor.\n */\npublic interface IImageProcessor extends IImageProcessorState {\n\n  /**\n   * Loads an image from the path and saves it with the given name.\n   * @param imagePath to locate the image\n   * @param imageName name to save the image as\n   */\n  void loadImagePathAndName(String imagePath, String imageName);\n\n  /**\n   * Saves an image to the path with the given name.\n   * @param imagePath to save the image in\n   * @param imageName name to save the image as\n   */\n  void saveImagePathAndName(String imagePath, String imageName);\n\n  /**\n   * Brings out a certain component in the image.\n   * @param component Component to bring out the image.\n   * @param imageName Image to edit\n   * @param destImageName Image name to save the edited image as\n   */\n  void focusComponent(String component, String imageName, String destImageName);\n\n  /**\n   * Flips the image horizontally.\n   * @param imageName Image to edit\n   * @param destImageName Image name to save the edited image as\n   */\n  void horizontalFlip(String imageName, String destImageName);\n\n  /**\n   * Flips the image vertically.\n   * @param imageName Image to edit\n   * @param destImageName Image name to save the edited image as\n   */\n  void verticalFlip(String imageName, String destImageName);\n\n  /**\n   * Brightens the image to the specified value.\n   * @param increment to brighten the value to\n   * @param imageName Image to edit\n   * @param destImageName Image name to save the edited image as\n   */\n  void brightenImage(int increment, String imageName, String destImageName);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/IImageProcessor.java b/src/model/IImageProcessor.java
--- a/src/model/IImageProcessor.java	(revision 11eb49de54955be024d978af4aa0355c19140b13)
+++ b/src/model/IImageProcessor.java	(date 1667453357573)
@@ -12,36 +12,24 @@
    * @param imagePath to locate the image
    * @param imageName name to save the image as
    */
-  void loadImagePathAndName(String imagePath, String imageName);
+  public void loadImagePathAndName(String imagePath, String imageName);
 
   /**
    * Saves an image to the path with the given name.
    * @param imagePath to save the image in
    * @param imageName name to save the image as
    */
-  void saveImagePathAndName(String imagePath, String imageName);
-
-  /**
-   * Brings out a certain component in the image.
-   * @param component Component to bring out the image.
-   * @param imageName Image to edit
-   * @param destImageName Image name to save the edited image as
-   */
-  void focusComponent(String component, String imageName, String destImageName);
+  public void saveImagePathAndName(String imagePath, String imageName);
 
   /**
-   * Flips the image horizontally.
-   * @param imageName Image to edit
-   * @param destImageName Image name to save the edited image as
+   * Applies the given command and puts it into the map as a new Image name.
+   * @param imageName name of the Image to applied to
+   * @param command the command that is going to be applied to the function
+   * @param newImageName the name that the new image will be saved to in the map
+   * @throws IllegalArgumentException thrown if imageName does not exist in the list
    */
-  void horizontalFlip(String imageName, String destImageName);
-
-  /**
-   * Flips the image vertically.
-   * @param imageName Image to edit
-   * @param destImageName Image name to save the edited image as
-   */
-  void verticalFlip(String imageName, String destImageName);
+  public void applyCommand(String imageName, ImageCommand command, String newImageName)
+          throws IllegalArgumentException;
 
   /**
    * Brightens the image to the specified value.
@@ -49,5 +37,5 @@
    * @param imageName Image to edit
    * @param destImageName Image name to save the edited image as
    */
-  void brightenImage(int increment, String imageName, String destImageName);
+  public void brightenImage(int increment, String imageName, String destImageName);
 }
Index: src/model/ImageProcessorModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport imageInfo.BasicImage;\nimport imageInfo.IPixel;\nimport imageInfo.IImage;\nimport imageInfo.ImageUtil;\nimport imageInfo.Pixel;\n\npublic class ImageProcessorModel implements IImageProcessor {\n\n  private Map<String, IImage> images;\n\n  public ImageProcessorModel() {\n    images = new HashMap<String, IImage>();\n  }\n\n  @Override\n  public void loadImagePathAndName(String imagePath, String imageName) {\n    ImageUtil processImage = new ImageUtil(imagePath);\n    IImage image = new BasicImage(processImage.getWidth(),\n                                  processImage.getHeight(),\n                                  processImage.getMaxValue(),\n                                  processImage.getPixels());\n    images.put(imageName, image);\n  }\n\n  @Override\n  public void saveImagePathAndName(String imagePath, String imageName) {\n    //?? save to a specific place ??\n  }\n\n  // TRIED THIS W ONLY RED COMPONENT, WOULD HAVE TO UPDATE W OTHER ONES BUT WASN'T\n  // SURE IF PROCESS WAS RIGHT HAHA WE CAN UPDATE\n  @Override\n  public void focusComponent(String component, String imageName, String destImageName) {\n    IImage currentImage = images.get(imageName);\n    IPixel[][] oldPixels = currentImage.getPixels();\n    IPixel[][] newPixels = new Pixel[currentImage.getWidth()][currentImage.getHeight()];\n    IImage newImage = new BasicImage(currentImage);\n    IPixel currentPixel = new Pixel(0, 0, 0);\n    int maxRed = -1;\n\n    for(int i = 0; i < oldPixels.length; i++) {\n      for(int j = 0; j < oldPixels.length; j++) {\n        currentPixel = oldPixels[i][j];\n        newPixels[i][j] = new Pixel(currentPixel.getR(), currentPixel.getR(), currentPixel.getR());\n        if(currentPixel.getR() > maxRed) {\n          maxRed = currentPixel.getR();\n        }\n      }\n    }\n    ImageUtil newImage = new ImageUtil(currentImage.getWidth(),\n            currentImage.getHeight(), maxRed, newPixels);\n    images.put(destImageName, newImage);\n  }\n\n  @Override\n  public void horizontalFlip(String imageName, String destImageName) {\n\n  }\n\n  @Override\n  public void verticalFlip(String imageName, String destImageName) {\n\n  }\n\n  @Override\n  public void brightenImage(int increment, String imageName, String destImageName) {\n\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/ImageProcessorModel.java b/src/model/ImageProcessorModel.java
--- a/src/model/ImageProcessorModel.java	(revision 11eb49de54955be024d978af4aa0355c19140b13)
+++ b/src/model/ImageProcessorModel.java	(date 1667453818450)
@@ -4,6 +4,7 @@
 import java.util.Map;
 
 import imageInfo.BasicImage;
+import imageInfo.IImageState;
 import imageInfo.IPixel;
 import imageInfo.IImage;
 import imageInfo.ImageUtil;
@@ -32,43 +33,20 @@
     //?? save to a specific place ??
   }
 
-  // TRIED THIS W ONLY RED COMPONENT, WOULD HAVE TO UPDATE W OTHER ONES BUT WASN'T
-  // SURE IF PROCESS WAS RIGHT HAHA WE CAN UPDATE
-  @Override
-  public void focusComponent(String component, String imageName, String destImageName) {
-    IImage currentImage = images.get(imageName);
-    IPixel[][] oldPixels = currentImage.getPixels();
-    IPixel[][] newPixels = new Pixel[currentImage.getWidth()][currentImage.getHeight()];
-    IImage newImage = new BasicImage(currentImage);
-    IPixel currentPixel = new Pixel(0, 0, 0);
-    int maxRed = -1;
-
-    for(int i = 0; i < oldPixels.length; i++) {
-      for(int j = 0; j < oldPixels.length; j++) {
-        currentPixel = oldPixels[i][j];
-        newPixels[i][j] = new Pixel(currentPixel.getR(), currentPixel.getR(), currentPixel.getR());
-        if(currentPixel.getR() > maxRed) {
-          maxRed = currentPixel.getR();
-        }
-      }
-    }
-    ImageUtil newImage = new ImageUtil(currentImage.getWidth(),
-            currentImage.getHeight(), maxRed, newPixels);
-    images.put(destImageName, newImage);
-  }
-
   @Override
-  public void horizontalFlip(String imageName, String destImageName) {
+  public void applyCommand(String imageName, ImageCommand command, String newImageName)
+          throws IllegalArgumentException {
 
+    this.images.put(newImageName, command.apply(this.images.get(imageName)));
   }
 
   @Override
-  public void verticalFlip(String imageName, String destImageName) {
+  public void brightenImage(int increment, String imageName, String destImageName) {
 
   }
 
   @Override
-  public void brightenImage(int increment, String imageName, String destImageName) {
-
+  public IImage getImage(String imageName) {
+    return new BasicImage(this.images.get(imageName));
   }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"917f784c-d3d5-4a0c-b5c2-613eef66990b\" name=\"Changes\" comment=\"I copied in the starter code from the assignment.\">\n      <change afterPath=\"$PROJECT_DIR$/src/imageInfo/BasicImage.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/imageInfo/IImage.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/imageInfo/IImageState.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/model/IImageProcessorState.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/model/ImageCommand.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/controller/IController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/controller/IController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/imageInfo/IPixel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/imageInfo/IPixel.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/imageInfo/ImageUtil.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/imageInfo/ImageUtil.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/model/IModel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/model/IImageProcessor.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/model/ImageProcessorModel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/model/ImageProcessorModel.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2GxdxkRGmNBbrNSgGv2lFGSRTia\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\"\n  }\n}]]></component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"917f784c-d3d5-4a0c-b5c2-613eef66990b\" name=\"Changes\" comment=\"\" />\n      <created>1667334424469</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1667334424469</updated>\n      <workItem from=\"1667334429430\" duration=\"1000\" />\n      <workItem from=\"1667440199022\" duration=\"2357000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 11eb49de54955be024d978af4aa0355c19140b13)
+++ b/.idea/workspace.xml	(date 1667453820965)
@@ -4,17 +4,13 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="917f784c-d3d5-4a0c-b5c2-613eef66990b" name="Changes" comment="I copied in the starter code from the assignment.">
-      <change afterPath="$PROJECT_DIR$/src/imageInfo/BasicImage.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/imageInfo/IImage.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/imageInfo/IImageState.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/model/IImageProcessorState.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/model/ImageCommand.java" afterDir="false" />
+    <list default="true" id="917f784c-d3d5-4a0c-b5c2-613eef66990b" name="Changes" comment="I changed a lot of stuff. I made a separate Image class to hold the pixels, and then I was thinking that we could use commands to make the later functions easier to add later.">
+      <change afterPath="$PROJECT_DIR$/src/model/BrightenImage.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/model/FlipImage.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/controller/IController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/controller/IController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/imageInfo/IPixel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/imageInfo/IPixel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/imageInfo/ImageUtil.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/imageInfo/ImageUtil.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/model/IModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/IImageProcessor.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/images/Koala.ppm" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/model/IImageProcessor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/IImageProcessor.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/model/IImageProcessorState.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/IImageProcessorState.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/model/ImageProcessorModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/ImageProcessorModel.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -63,8 +59,16 @@
       <option name="presentableId" value="Default" />
       <updated>1667334424469</updated>
       <workItem from="1667334429430" duration="1000" />
-      <workItem from="1667440199022" duration="2357000" />
+      <workItem from="1667440199022" duration="6694000" />
+    </task>
+    <task id="LOCAL-00001" summary="I changed a lot of stuff. I made a separate Image class to hold the pixels, and then I was thinking that we could use commands to make the later functions easier to add later.">
+      <created>1667442628715</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1667442628715</updated>
     </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -81,4 +85,8 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="I changed a lot of stuff. I made a separate Image class to hold the pixels, and then I was thinking that we could use commands to make the later functions easier to add later." />
+    <option name="LAST_COMMIT_MESSAGE" value="I changed a lot of stuff. I made a separate Image class to hold the pixels, and then I was thinking that we could use commands to make the later functions easier to add later." />
+  </component>
 </project>
\ No newline at end of file
Index: src/model/FlipImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/FlipImage.java b/src/model/FlipImage.java
new file mode 100644
--- /dev/null	(date 1667453307309)
+++ b/src/model/FlipImage.java	(date 1667453307309)
@@ -0,0 +1,59 @@
+package model;
+
+import imageInfo.BasicImage;
+import imageInfo.IImage;
+import imageInfo.IPixel;
+import imageInfo.Pixel;
+
+/**
+ * Represents a command to flip the desired image across the
+ */
+public class FlipImage implements ImageCommand {
+
+  private String flip;
+
+  /**
+   * Constructs a command to flip an IImage.
+   * @param flip the direction to flip it.
+   */
+  public FlipImage(String flip) {
+    if (!flip.equalsIgnoreCase("horizontal-flip")
+            || !flip.equalsIgnoreCase("vertical-flip")) {
+      throw new IllegalArgumentException("This is not a valid flip option.");
+    }
+
+    this.flip =  flip;
+  }
+
+  @Override
+  public IImage apply(IImage image) {
+    int width = image.getWidth();
+    int height = image.getHeight();
+    int maxVal = image.getMaxValue();
+    IPixel[][] newPixels = new Pixel[height][width];
+    IPixel[][] oldPixels = image.getPixels();
+    for (int r = 0; r < height; r++) {
+      for (int c = 0; c < width; c++) {
+        newPixels[r][c] = oldPixels[this.getFlippedRow(r, height)][this.getFlippedCol(c, width)];
+      }
+    }
+
+    return new BasicImage(width, height, maxVal, newPixels);
+  }
+
+  private int getFlippedRow(int row, int height) {
+    if (this.flip.equalsIgnoreCase("horizontal-flip")) {
+      return row;
+    } else {
+      return height - 1 - row;
+    }
+  }
+
+  private int getFlippedCol(int col, int width) {
+    if (this.flip.equalsIgnoreCase("vertical-flip")) {
+      return col;
+    } else {
+      return width - 1 - col;
+    }
+  }
+}
Index: src/model/IImageProcessorState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\nimport imageInfo.IPixel;\n\npublic interface IImageProcessorState {\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/model/IImageProcessorState.java b/src/model/IImageProcessorState.java
--- a/src/model/IImageProcessorState.java	(revision 11eb49de54955be024d978af4aa0355c19140b13)
+++ b/src/model/IImageProcessorState.java	(date 1667452528028)
@@ -1,7 +1,13 @@
 package model;
 
+import imageInfo.IImage;
+import imageInfo.IImageState;
 import imageInfo.IPixel;
 
 public interface IImageProcessorState {
-
+  /**
+   * Gets the image with that name.
+   * @param imageName the image with that name.
+   */
+  public IImage getImage(String imageName);
 }
